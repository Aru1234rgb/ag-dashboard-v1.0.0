<body class="bg-[#0d141a] font-sans relative overflow-hidden" style="font-family: 'Space Grotesk', sans-serif;">
  <canvas id="starsCanvas" class="absolute top-0 left-0 w-full h-full"></canvas>
  <%- include('./components/wrapper') %>

  <!-- Main Content -->
  <main class="flex-grow container mx-auto px-6 py-10 relative z-10">
    <div class="flex justify-between items-center w-full mx-auto pb-6">
      <!-- Welcome Section -->
      <div class="flex flex-col">
        <h1 class="text-3xl text-white font-bold mb-1">User Credentials</h1>
        <p class="text-gray-400 text-lg">View credentials for your <%= name %> Panel account.</p>
      </div>

      <!-- Breadcrumbs -->
      <nav aria-label="Breadcrumb" class="inline-flex py-3 px-6 rounded-lg bg-white/10 backdrop-blur-lg shadow-md">
        <ol class="flex items-center space-x-3">
          <li>
            <a href="../" class="text-md flex items-center gap-2 text-gray-300 hover:text-white">
              <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path d="M5 12l-2 0l9 -9l9 9l-2 0"></path><path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7"></path><path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6"></path></svg>
              Home
            </a>
          </li>
          <li class="text-gray-400">/</li>
          <li class="text-white font-semibold">User Credentials</li>
        </ol>
      </nav>
    </div>

    <!-- Credentials Section -->
    <div class="mt-12 flex justify-center">
      <div class="text-center bg-white/10 p-8 rounded-2xl shadow-lg w-full max-w-lg border border-white/10 backdrop-blur-lg relative z-10">
        <h2 class="text-2xl text-white font-bold mb-4">User Credentials</h2>
        <p class="text-gray-300 mb-6">Use these credentials for actions such as SFTP.</p>
        <div class="mb-4">
          <input value="<%= user.email %>" class="w-full text-gray-300 px-4 py-3 border rounded-lg bg-gray-900" disabled>
        </div>
        <div class="relative mb-6">
          <input type="password" id="password" value="<%= password %>" class="w-full text-white px-4 py-3 border rounded-lg bg-gray-800 placeholder:text-gray-400" readonly>
          <button onclick="togglePassword()" class="absolute right-3 top-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-500 shadow-md">Show</button>
        </div>
        <div class="flex justify-center">
          <a href="../panel/" class="bg-orange-600 text-white px-6 py-3 rounded-lg hover:bg-orange-700 shadow-lg">Go to Panel</a>
        </div>
      </div>
    </div>
  </main>

  <script>
    function togglePassword() {
      const passwordInput = document.getElementById('password');
      const toggleButton = passwordInput.nextElementSibling;
      if (passwordInput.type === "password") {
        passwordInput.type = "text";
        toggleButton.textContent = "Hide";
      } else {
        passwordInput.type = "password";
        toggleButton.textContent = "Show";
      }
    }

    // Enhanced Animated Star Background
    const canvas = document.getElementById("starsCanvas");
    const ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const stars = Array.from({ length: 200 }).map(() => ({
      x: Math.random() * canvas.width,
      y: Math.random() * canvas.height,
      radius: Math.random() * 3 + 1,
      speed: Math.random() * 1 + 0.5,
      opacity: Math.random() * 0.5 + 0.5
    }));

    function drawStars() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      stars.forEach((star) => {
        ctx.beginPath();
        ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);
        ctx.fillStyle = `rgba(255, 255, 255, ${star.opacity})`;
        ctx.shadowBlur = 10;
        ctx.shadowColor = "white";
        ctx.fill();
      });
    }

    function updateStars() {
      stars.forEach((star) => {
        star.y += star.speed;
        if (star.y > canvas.height) {
          star.y = 0;
          star.x = Math.random() * canvas.width;
        }
      });
    }

    function animateStars() {
      drawStars();
      updateStars();
      requestAnimationFrame(animateStars);
    }

    animateStars();
    window.addEventListener("resize", () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });
  </script>

  <%- include('./components/footer') %>
</body>
